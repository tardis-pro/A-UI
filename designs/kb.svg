<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 800">
  <!-- Background -->
  <rect width="1200" height="800" fill="#1E1E2E" />
  
  <!-- Sidebar -->
  <rect x="0" y="0" width="220" height="800" fill="#181825" />
  
  <!-- Sidebar Logo Area -->
  <rect x="0" y="0" width="220" height="60" fill="#313244" />
  <text x="110" y="38" font-family="Arial" font-size="20" fill="#CDD6F4" text-anchor="middle" font-weight="bold">AUI</text>
  
  <!-- Sidebar Menu Items -->
  <g>
    <rect x="15" y="80" width="190" height="40" rx="5" fill="#181825" />
    <text x="55" y="105" font-family="Arial" font-size="14" fill="#CDD6F4">Dashboard</text>
    <rect x="20" y="90" width="20" height="20" fill="#CDD6F4" />
  </g>
  
  <g>
    <rect x="15" y="130" width="190" height="40" rx="5" fill="#181825" />
    <text x="55" y="155" font-family="Arial" font-size="14" fill="#CDD6F4">Code Assistant</text>
    <rect x="20" y="140" width="20" height="20" fill="#89B4FA" />
  </g>
  
  <g>
    <rect x="15" y="180" width="190" height="40" rx="5" fill="#45475A" />
    <text x="55" y="205" font-family="Arial" font-size="14" fill="#CDD6F4">Knowledge Base</text>
    <rect x="20" y="190" width="20" height="20" fill="#F9E2AF" />
  </g>
  
  <g>
    <rect x="15" y="230" width="190" height="40" rx="5" fill="#181825" />
    <text x="55" y="255" font-family="Arial" font-size="14" fill="#CDD6F4">Command History</text>
    <rect x="20" y="240" width="20" height="20" fill="#F38BA8" />
  </g>
  
  <g>
    <rect x="15" y="280" width="190" height="40" rx="5" fill="#181825" />
    <text x="55" y="305" font-family="Arial" font-size="14" fill="#CDD6F4">CI/CD Monitor</text>
    <rect x="20" y="290" width="20" height="20" fill="#A6E3A1" />
  </g>
  
  <g>
    <rect x="15" y="330" width="190" height="40" rx="5" fill="#181825" />
    <text x="55" y="355" font-family="Arial" font-size="14" fill="#CDD6F4">Settings</text>
    <rect x="20" y="340" width="20" height="20" fill="#FAB387" />
  </g>
  
  <!-- Sidebar bottom info -->
  <rect x="15" y="730" width="190" height="50" rx="5" fill="#313244" opacity="0.8" />
  <text x="110" y="760" font-family="Arial" font-size="12" fill="#CDD6F4" text-anchor="middle">Local LLM: Mistral 7B</text>
  <circle cx="30" cy="755" r="8" fill="#A6E3A1" />
  
  <!-- Main Content Area -->
  <rect x="240" y="20" width="940" height="760" rx="10" fill="#313244" />
  
  <!-- Header -->
  <rect x="240" y="20" width="940" height="60" rx="10" rx-bottom="0" ry-bottom="0" fill="#45475A" />
  <text x="270" y="55" font-family="Arial" font-size="20" fill="#CDD6F4" font-weight="bold">Knowledge Base</text>
  
  <!-- Search Bar -->
  <rect x="700" y="30" width="300" height="40" rx="5" fill="#1E1E2E" />
  <text x="720" y="55" font-family="Arial" font-size="14" fill="#7F849C">Search knowledge...</text>
  <rect x="1010" y="30" width="40" height="40" rx="5" fill="#89B4FA" />
  <text x="1030" y="55" font-family="Arial" font-size="14" fill="#1E1E2E" text-anchor="middle" font-weight="bold">üîç</text>
  
  <!-- Add Knowledge Button -->
  <rect x="1060" y="30" width="100" height="40" rx="5" fill="#A6E3A1" />
  <text x="1110" y="55" font-family="Arial" font-size="14" fill="#1E1E2E" text-anchor="middle" font-weight="bold">+ Add</text>
  
  <!-- Filter Bar -->
  <rect x="240" y="80" width="940" height="50" fill="#313244" />
  
  <g>
    <rect x="260" y="90" width="110" height="30" rx="15" fill="#45475A" />
    <text x="315" y="110" font-family="Arial" font-size="12" fill="#CDD6F4" text-anchor="middle">All</text>
  </g>
  
  <g>
    <rect x="380" y="90" width="110" height="30" rx="15" fill="#313244" />
    <text x="435" y="110" font-family="Arial" font-size="12" fill="#CDD6F4" text-anchor="middle">Documentation</text>
  </g>
  
  <g>
    <rect x="500" y="90" width="110" height="30" rx="15" fill="#313244" />
    <text x="555" y="110" font-family="Arial" font-size="12" fill="#CDD6F4" text-anchor="middle">Decisions</text>
  </g>
  
  <g>
    <rect x="620" y="90" width="110" height="30" rx="15" fill="#313244" />
    <text x="675" y="110" font-family="Arial" font-size="12" fill="#CDD6F4" text-anchor="middle">Q&amp;A</text>
  </g>
  
  <g>
    <rect x="740" y="90" width="110" height="30" rx="15" fill="#313244" />
    <text x="795" y="110" font-family="Arial" font-size="12" fill="#CDD6F4" text-anchor="middle">Best Practices</text>
  </g>
  
  <g>
    <rect x="860" y="90" width="110" height="30" rx="15" fill="#313244" />
    <text x="915" y="110" font-family="Arial" font-size="12" fill="#CDD6F4" text-anchor="middle">Architecture</text>
  </g>
  
  <!-- Sort by -->
  <text x="1020" y="110" font-family="Arial" font-size="12" fill="#7F849C">Sort: Recent</text>
  
  <!-- Knowledge Items Grid -->
  <rect x="240" y="130" width="940" height="650" fill="#1E1E2E" />
  
  <!-- Knowledge Item 1 -->
  <g>
    <rect x="260" y="150" width="440" height="180" rx="5" fill="#313244" />
    <rect x="260" y="150" width="440" height="40" rx="5" fill="#45475A" />
    <text x="280" y="175" font-family="Arial" font-size="16" fill="#CDD6F4" font-weight="bold">JWT Authentication Flow</text>
    <text x="565" y="175" font-family="Arial" font-size="12" fill="#A6E3A1" text-anchor="end">Architecture</text>
    
    <text x="280" y="210" font-family="Arial" font-size="14" fill="#CDD6F4">Our authentication service uses JWT tokens with the following flow:</text>
    <text x="280" y="235" font-family="Arial" font-size="12" fill="#CDD6F4">1. Login generates access token (15m) and refresh token (7d)</text>
    <text x="280" y="255" font-family="Arial" font-size="12" fill="#CDD6F4">2. Access token includes user ID, roles, and expires timestamp</text>
    <text x="280" y="275" font-family="Arial" font-size="12" fill="#CDD6F4">3. Refresh endpoint rotates refresh tokens to prevent reuse</text>
    
    <text x="280" y="310" font-family="Arial" font-size="10" fill="#7F849C">Added by: Alex Chen ‚Ä¢ 3 days ago</text>
    <text x="660" y="310" font-family="Arial" font-size="10" fill="#89B4FA" text-anchor="end">Related: auth/middleware.js</text>
  </g>
  
  <!-- Knowledge Item 2 -->
  <g>
    <rect x="720" y="150" width="440" height="180" rx="5" fill="#313244" />
    <rect x="720" y="150" width="440" height="40" rx="5" fill="#45475A" />
    <text x="740" y="175" font-family="Arial" font-size="16" fill="#CDD6F4" font-weight="bold">Database Migration Process</text>
    <text x="1125" y="175" font-family="Arial" font-size="12" fill="#F9E2AF" text-anchor="end">Process</text>
    
    <text x="740" y="210" font-family="Arial" font-size="14" fill="#CDD6F4">Standard process for database migrations:</text>
    <text x="740" y="235" font-family="Arial" font-size="12" fill="#CDD6F4">1. Create migration script in /migrations folder</text>
    <text x="740" y="255" font-family="Arial" font-size="12" fill="#CDD6F4">2. Test locally using docker-compose environment</text>
    <text x="740" y="275" font-family="Arial" font-size="12" fill="#CDD6F4">3. Run in staging with --dry-run flag before production</text>
    
    <text x="740" y="310" font-family="Arial" font-size="10" fill="#7F849C">Added by: Maria Lopez ‚Ä¢ 5 days ago</text>
    <text x="1120" y="310" font-family="Arial" font-size="10" fill="#89B4FA" text-anchor="end">Related: db/migrations/</text>
  </g>
  
  <!-- Knowledge Item 3 -->
  <g>
    <rect x="260" y="350" width="440" height="180" rx="5" fill="#313244" />
    <rect x="260" y="350" width="440" height="40" rx="5" fill="#45475A" />
    <text x="280" y="375" font-family="Arial" font-size="16" fill="#CDD6F4" font-weight="bold">Error Handling Standards</text>
    <text x="565" y="375" font-family="Arial" font-size="12" fill="#F38BA8" text-anchor="end">Best Practice</text>
    
    <text x="280" y="410" font-family="Arial" font-size="14" fill="#CDD6F4">Our error handling approach follows these standards:</text>
    <text x="280" y="435" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Use custom AppError class for all application errors</text>
    <text x="280" y="455" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Include error codes, severity, and user-friendly messages</text>
    <text x="280" y="475" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Log all errors to central logging service with request ID</text>
    
    <text x="280" y="510" font-family="Arial" font-size="10" fill="#7F849C">Added by: Raj Patel ‚Ä¢ 1 week ago</text>
    <text x="660" y="510" font-family="Arial" font-size="10" fill="#89B4FA" text-anchor="end">Related: utils/errors.js</text>
  </g>
  
  <!-- Knowledge Item 4 -->
  <g>
    <rect x="720" y="350" width="440" height="180" rx="5" fill="#313244" />
    <rect x="720" y="350" width="440" height="40" rx="5" fill="#45475A" />
    <text x="740" y="375" font-family="Arial" font-size="16" fill="#CDD6F4" font-weight="bold">Microservice Communication Protocol</text>
    <text x="1125" y="375" font-family="Arial" font-size="12" fill="#A6E3A1" text-anchor="end">Architecture</text>
    
    <text x="740" y="410" font-family="Arial" font-size="14" fill="#CDD6F4">Service-to-service communication guidelines:</text>
    <text x="740" y="435" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Synchronous: REST with OpenAPI specs for simple queries</text>
    <text x="740" y="455" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Asynchronous: Kafka for events, state changes, logs</text>
    <text x="740" y="475" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ gRPC for high-throughput internal service communication</text>
    
    <text x="740" y="510" font-family="Arial" font-size="10" fill="#7F849C">Added by: Sarah Johnson ‚Ä¢ 2 weeks ago</text>
    <text x="1120" y="510" font-family="Arial" font-size="10" fill="#89B4FA" text-anchor="end">Related: services/api/client.js</text>
  </g>
  
  <!-- Knowledge Item 5 -->
  <g>
    <rect x="260" y="550" width="440" height="180" rx="5" fill="#313244" />
    <rect x="260" y="550" width="440" height="40" rx="5" fill="#45475A" />
    <text x="280" y="575" font-family="Arial" font-size="16" fill="#CDD6F4" font-weight="bold">Frontend Performance Optimization</text>
    <text x="565" y="575" font-family="Arial" font-size="12" fill="#F38BA8" text-anchor="end">Best Practice</text>
    
    <text x="280" y="610" font-family="Arial" font-size="14" fill="#CDD6F4">Key performance optimization techniques:</text>
    <text x="280" y="635" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Code splitting with dynamic imports (React.lazy)</text>
    <text x="280" y="655" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Memory profiling for SPA leak prevention</text>
    <text x="280" y="675" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Service worker caching strategy (network-first)</text>
    
    <text x="280" y="710" font-family="Arial" font-size="10" fill="#7F849C">Added by: Thomas Wong ‚Ä¢ 2 weeks ago</text>
    <text x="660" y="710" font-family="Arial" font-size="10" fill="#89B4FA" text-anchor="end">Related: client/src/utils/performance.js</text>
  </g>
  
  <!-- Knowledge Item 6 -->
  <g>
    <rect x="720" y="550" width="440" height="180" rx="5" fill="#313244" />
    <rect x="720" y="550" width="440" height="40" rx="5" fill="#45475A" />
    <text x="740" y="575" font-family="Arial" font-size="16" fill="#CDD6F4" font-weight="bold">API Rate Limiting Implementation</text>
    <text x="1125" y="575" font-family="Arial" font-size="12" fill="#F9E2AF" text-anchor="end">Decision</text>
    
    <text x="740" y="610" font-family="Arial" font-size="14" fill="#CDD6F4">Rate limiting strategy decided:</text>
    <text x="740" y="635" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Redis-based sliding window counter implementation</text>
    <text x="740" y="655" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Different tiers for public vs. authenticated requests</text>
    <text x="740" y="675" font-family="Arial" font-size="12" fill="#CDD6F4">‚Ä¢ Response headers include limit, remaining, and reset</text>
    
    <text x="740" y="710" font-family="Arial" font-size="10" fill="#7F849C">Added by: Team Decision ‚Ä¢ 3 weeks ago</text>
    <text x="1120" y="710" font-family="Arial" font-size="10" fill="#89B4FA" text-anchor="end">Related: middleware/rateLimiter.js</text>
  </g>
</svg>